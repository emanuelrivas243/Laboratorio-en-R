miss<-function(paisesdatos,plot=T){
n=nrow(paisesdatos);p=ncol(paisesdatos)
names.obs<-rownames(paisesdatos)
nobs.comp=sum(complete.cases(paisesdatos))         # Cuenta los registros completos
Obs.comp=which(complete.cases(paisesdatos))        # Identifica los registros completos
nobs.miss = sum(!complete.cases(paisesdatos))      # Identifica los registros con datos faltantes.
Obs.miss=which(!complete.cases(paisesdatos))       # Identifica los registros con datos faltantes.
paisesdatos.NA<-is.na(paisesdatos)
Var_Num<- sort(colSums(paisesdatos.NA),decreasing=T)
Var_per<-round(Var_Num/n,3)
Obs_Num<-rowSums(paisesdatos.NA)
names(Obs_Num)<-names.obs
Obs_Num<-sort(Obs_Num,decreasing=T)
Obs_per<-round(Obs_Num/p,3)
lista<-list(n.row = n, n.col = p,n.comp = nobs.comp,Obs.comp = Obs.comp,n.miss = nobs.miss,Obs.miss = Obs.miss, Var.n = Var_Num , Var.p = Var_per, Obs.n= Obs_Num, Obs.per= Obs_per)
if(plot){
windows(height=10,width=15)
par(mfrow=c(1,2))
coord<-barplot(Var_per,plot=F)
barplot(Var_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por variable")
axis(2,at=coord,labels=names(Var_per), cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2),pos=0)
coord<-barplot(Obs_per,plot=F)
barplot(Obs_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por registro")
axis(2,at=coord,labels=names(Obs_per),cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2))
}
return(invisible(lista))
}
Summary.NA = miss(paisesdatos)
attach(paisesdatos)
f.asia <- paisesdatos %>% filter(GRUPOS == "asia")
f.asia$'Esperanza.vida.mujer'[which(is.na(f.asia$'Esperanza.vida.mujer'))] = round(mean(f.asia$'Esperanza.vida.mujer',na.rm = T),4)
f.asia$'PNB'[which(is.na(f.asia$'PNB'))] = round(mean(f.asia$'PNB', na.rm = T),1)
f.asia$'Población..miles.'[which(is.na(f.asia$'Población..miles.'))] = round(mean(f.asia$'Población..miles.',na.rm = T),4)
f.africa <- paisesdatos%>%filter(GRUPOS == "africa")
f.africa$'Esperanza.vida.mujer'[which(is.na(f.africa$'Esperanza.vida.mujer'))] = round(mean(f.africa$'Esperanza.vida.mujer',na.rm = T),1)
f.africa$'PNB'[which(is.na(f.africa$'PNB'))] = round(mean(f.africa$'PNB', na.rm = T),1)
f.africa$'Población.miles'[which(is.na(f.africa$'Población..miles.'))] = round(mean(f.africa$'Población..miles.', na.rm = T),1)
f.africa$'Población..miles.'[which(is.na(f.africa$'Población..miles.'))] = round(mean(f.africa$'Población..miles.', na.rm = T),1)
f.ibero <- paisesdatos %>% filter(GRUPOS == "iberoamerica")
f.ibero$'Esperanza.vida.mujer'[which(is.na(f.ibero$'Esperanza.vida.mujer'))] = round(mean(f.ibero$'Esperanza.vida.mujer',na.rm = T),1)
f.ibero$'PNB'[which(is.na(f.ibero$'PNB'))] = round(mean(f.ibero$'PNB', na.rm = T),1)
f.ibero$'Población..miles.'[which(is.na(f.I$'Población..miles.'))] = round(mean(f.ibero$'Población..miles.',na.rm = T),1)
f.euo <- paisesdatos%>%filter(GRUPOS =="EuropaOriental")
f.euo$'Esperanza.vida.mujer'[which(is.na(f.euo$'Esperanza.vida.mujer'))] = round(mean(f.euo$'Esperanza.vida.mujer',na.rm = T),1)
f.euo$'PNB'[which(is.na(f.euo$'PNB'))] = round(mean(f.euo$'PNB',na.rm = T),1)
f.euo$'Población..miles.'[which(is.na(f.euo$'Población..miles.'))] = round(mean(f.euo$'Población..miles.',na.rm = T),1)
f.eo <- paisesdatos%>%filter(GRUPOS =="EO-NA_JAPON_AUSTR_NZ")
f.eo$'Esperanza.vida.mujer'[which(is.na(f.Eo$'Esperanza.vida.mujer'))] = round(mean(f.eo$'Esperanza.vida.mujer',na.rm = T),1)
f.eo$'PNB'[which(is.na(f.eo$'PNB'))] = round(mean(f.eo$'PNB',na.rm = T),1)
f.eo$'Población..miles.'[which(is.na(f.eo$'Población..miles.'))] = round(mean(f.eo$'Población..miles.',na.rm = T),1)
f.om <- paisesdatos %>% filter(GRUPOS =="ORIENTE MEDIO")
f.eo$'Esperanza.vida.mujer'[which(is.na(f.eo$'Esperanza.vida.mujer'))] = round(mean(f.eo$'Esperanza.vida.mujer',na.rm = T),1)
f.eo$'PNB'[which(is.na(f.eo$'PNB'))] = round(mean(f.eo$'PNB',na.rm = T),1)
f.eo$'Población..miles.'[which(is.na(f.eo$'Población..miles.'))] = round(mean(f.eo$'Población..miles.',na.rm = T),1)
f.om <- paisesdatos %>% filter(GRUPOS =="ORIENTE MEDIO")
f.om$'Esperanza.vida.mujer'[which(is.na(f.om$'Esperanza.vida.mujer'))] = round(mean(f.om$'Esperanza.vida.mujer',na.rm = T),1)
f.om$'PNB'[which(is.na(f.om$'PNB'))] = round(mean(f.om$'PNB',na.rm = T),1)
f.om$'Población..miles.'[which(is.na(f.om$'Población..miles.'))] = round(mean(f.om$'Población..miles.',na.rm = T),1)
detach(datos)
detach(paisesdatos)
datosimputados = rbind(f.asia,f.asia,f.eo,f.euo,f.ibero,f.om)
View(datoscorregidos)
View(paisesdatos)
paisesdatos <- read_excel("paises.xls")
table(paisesdatos$GRUPOS)
# Declaración de niveles correctos para las variables tipo Factor
level_grupospaises <- c(africa="africa", AFRICA="africa", Africa="africa",
asia="asia", Asia="asia", ASIA="asia",
EuropaOriental="EuropaOriental", EUROPAORIENTAL="EuropaOriental",
iberoamerica="iberoamerica", Iberoamerica="iberoamerica", IBEROAMERICA="iberoamerica")
## Modificación del formato y transformación de variables
paisesdatos <- transform(paisesdatos,
GRUPOS=factor(dplyr::recode(GRUPOS, !!!level_grupospaises))
)
table(paisesdatos$GRUPOS)
Rules <- editrules::editfile("consistencia.txt")
miss<-function(paisesdatos,plot=T){
n=nrow(paisesdatos);p=ncol(paisesdatos)
names.obs<-rownames(paisesdatos)
nobs.comp=sum(complete.cases(paisesdatos))         # Cuenta los registros completos
Obs.comp=which(complete.cases(paisesdatos))        # Identifica los registros completos
nobs.miss = sum(!complete.cases(paisesdatos))      # Identifica los registros con datos faltantes.
Obs.miss=which(!complete.cases(paisesdatos))       # Identifica los registros con datos faltantes.
paisesdatos.NA<-is.na(paisesdatos)
Var_Num<- sort(colSums(paisesdatos.NA),decreasing=T)
Var_per<-round(Var_Num/n,3)
Obs_Num<-rowSums(paisesdatos.NA)
names(Obs_Num)<-names.obs
Obs_Num<-sort(Obs_Num,decreasing=T)
Obs_per<-round(Obs_Num/p,3)
lista<-list(n.row = n, n.col = p,n.comp = nobs.comp,Obs.comp = Obs.comp,n.miss = nobs.miss,Obs.miss = Obs.miss, Var.n = Var_Num , Var.p = Var_per, Obs.n= Obs_Num, Obs.per= Obs_per)
if(plot){
windows(height=10,width=15)
par(mfrow=c(1,2))
coord<-barplot(Var_per,plot=F)
barplot(Var_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por variable")
axis(2,at=coord,labels=names(Var_per), cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2),pos=0)
coord<-barplot(Obs_per,plot=F)
barplot(Obs_per,xaxt="n",horiz=T,yaxt="n",xlim=c(-0.2,1), ylim=c(0,max(coord)+1),main= "% datos faltantes por registro")
axis(2,at=coord,labels=names(Obs_per),cex.axis=0.5,pos=0,las=2)
axis(1,seq(0,1,0.2),seq(0,1,0.2))
}
return(invisible(lista))
}
attach(paisesdatos)
f.asia <- paisesdatos %>% filter(GRUPOS == "asia")
f.asia$Esperanza.vida.mujer[which(is.na(f.asia$Esperanza.vida.mujer))] = round(mean(f.asia$Esperanza.vida.mujer,na.rm = T),4)
f.asia$PNB[which(is.na(f.asia$PNB))] = round(mean(f.asia$PNB, na.rm = T),1)
f.asia$'Población..miles.'[which(is.na(f.asia$'Población..miles.'))] = round(mean(f.asia$'Población..miles.',na.rm = T),4)
f.africa <- paisesdatos%>%filter(GRUPOS == "africa")
f.africa$Esperanza.vida.mujer[which(is.na(f.africa$Esperanza.vida.mujer))] = round(mean(f.africa$Esperanza.vida.mujer,na.rm = T),1)
f.africa$PNB[which(is.na(f.africa$PNB))] = round(mean(f.africa$PNB, na.rm = T),1)
f.africa$Población..miles.[which(is.na(f.africa$Población..miles.))] = round(mean(f.africa$Población..miles., na.rm = T),1)
f.ibero <- paisesdatos %>% filter(GRUPOS == "iberoamerica")
f.ibero$Esperanza.vida.mujer[which(is.na(f.ibero$Esperanza.vida.mujer))] = round(mean(f.ibero$Esperanza.vida.mujer,na.rm = T),1)
f.ibero$PNB[which(is.na(f.ibero$PNB))] = round(mean(f.ibero$PNB, na.rm = T),1)
f.ibero$Población..miles.[which(is.na(f.ibero$Población..miles.))] = round(mean(f.ibero$Población..miles.,na.rm = T),1)
f.euo <- paisesdatos%>%filter(GRUPOS =="EuropaOriental")
f.euo$Esperanza.vida.mujer[which(is.na(f.euo$Esperanza.vida.mujer))] = round(mean(f.euo$Esperanza.vida.mujer,na.rm = T),1)
f.euo$PNB[which(is.na(f.euo$PNB))] = round(mean(f.euo$PNB,na.rm = T),1)
f.euo$Población..miles.[which(is.na(f.euo$Población..miles.))] = round(mean(f.euo$Población..miles.,na.rm = T),1)
f.eo <- paisesdatos%>%filter(GRUPOS =="EO-NA_JAPON_AUSTR_NZ")
f.eo$Esperanza.vida.mujer[which(is.na(f.eo$Esperanza.vida.mujer))] = round(mean(f.eo$Esperanza.vida.mujer,na.rm = T),1)
f.eo$PNB[which(is.na(f.eo$PNB))] = round(mean(f.eo$PNB,na.rm = T),1)
f.eo$Población..miles.[which(is.na(f.eo$Población..miles.))] = round(mean(f.eo$Población..miles.,na.rm = T),1)
f.om <- paisesdatos %>% filter(GRUPOS =="ORIENTE MEDIO")
f.om$Esperanza.vida.mujer[which(is.na(f.om$Esperanza.vida.mujer))] = round(mean(f.om$Esperanza.vida.mujer,na.rm = T),1)
f.om$PNB[which(is.na(f.om$PNB))] = round(mean(f.om$PNB,na.rm = T),1)
f.om$Población..miles.[which(is.na(f.om$Población..miles.))] = round(mean(f.om$Población..miles.,na.rm = T),1)
detach(paisesdatos)
datosimputados = rbind(f.asia,f.asia,f.eo,f.euo,f.ibero,f.om)
View(paisesdatos)
#install.packages("easypackages")        # Libreria especial para hacer carga automática de librerias
library("easypackages")
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")# Listado de librerias requeridas por el script
easypackages::packages(lib_req)         # Verificación, instalación y carga de librerias.
library(readxl)
paisesdatos <- read_excel("paises.xls")
# Declaración de niveles correctos para las variables tipo Factor
level_grupospaises <- c(africa="africa", AFRICA="africa", Africa="africa",
asia="asia", Asia="asia", ASIA="asia",
EuropaOriental="EuropaOriental", EUROPAORIENTAL="EuropaOriental",
iberoamerica="iberoamerica", Iberoamerica="iberoamerica", IBEROAMERICA="iberoamerica")
## Modificación del formato y transformación de variables
paisesdatos <- transform(paisesdatos,
GRUPOS=factor(dplyr::recode(GRUPOS, !!!level_grupospaises))
)
str(paisesdatos)
Rules <- editrules::editfile("consistencia.txt")
summary(Valid_Data)
Valid_Data = editrules::violatedEdits(Rules, paisesdatos)
summary(Valid_Data)
attach(paisesdatos)
mean(Esperanza.vida.mujer,na.rm =T)
mean(PNB,na.rm = T)
mean(Poblacion..miles.,na.rm = T)
mean(Población..miles.,na.rm = T)
summary(paisesdatos)
imputM = mice::mice(paisesdatos, maxit = 1, method = "mean",seed = 2018,print=F)
paisesdatos_ImputM = mice::complete(imputM)
windows(height=10,width=15); visdat::vis_miss(paisesdatos_ImputM)
Visualizar.AQ(paisesdatos_ImputM)
mean(Esperanza.vida.mujer,na.rm =T)
mean(PNB,na.rm = T)
mean(Población..miles.,na.rm = T)
summary(paisesdatos)
View(paisesdatos_ImputM)
windows(height=10,width=15); visdat::vis_miss(paisesdatos_ImputM)
names(paisesdatos_ImputM)
barplot(table(paisesdatos_ImputM$GRUPOS), col=c("lightblue","pink"),
xlab="Grupo", ylab="Frecuencia",
main="Distribución de países\n según por el grupo.")
library(ULPGCmisc) # Cargamos la librería ULPGCmisc
library(ULPGCmisc) # Cargamos la librería ULPGCmisc
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("angeloSdP/ULPGCmisc")
library(ULPGCmisc)
freqTable(paisesdatos_ImputM$GRUPOS)
pais<-c(length(GRUPOS[GRUPOS=="asia"]),length(GRUPOS[GRUPOS=="africa"]),
length(GRUPOS[GRUPOS=="EuropaOriental"]),length(GRUPOS[GRUPOS=="EO-NA_JAPON_AUSTR_NZ"]),
length(GRUPOS[GRUPOS=="iberoamerica"]),length(GRUPOS[GRUPOS=="ORIENTE MEDIO"]))
attach(paisesdatos_ImputM)
pais<-c(length(GRUPOS[GRUPOS=="asia"]),length(GRUPOS[GRUPOS=="africa"]),
length(GRUPOS[GRUPOS=="EuropaOriental"]),length(GRUPOS[GRUPOS=="EO-NA_JAPON_AUSTR_NZ"]),
length(GRUPOS[GRUPOS=="iberoamerica"]),length(GRUPOS[GRUPOS=="ORIENTE MEDIO"]))
nombresgrupos<-c("ASIA","AFRICA","EUROPA ORIENTAL",
"EO-NA_JAPON_AUSTR_NZ","IBEROAMERICA","ORIENTE MEDIO")
etiquetas <- paste0(nombresgrupos," ",round(100 * pais/sum(pais), 2),"%")
x11()
pie(pais,labels=etiquetas,col=color)
nombresgrupos<-c("ASIA","AFRICA","EUROPA ORIENTAL",
"EO-NA_JAPON_AUSTR_NZ","IBEROAMERICA","ORIENTE MEDIO")
etiquetas <- paste0(nombresgrupos," ",round(100 * pais/sum(pais), 2),"%")
color<-c("lightblue","lightgreen","lightyellow","purple","lightpink","orange")
x11()
pie(pais,labels=etiquetas,col=color)
x11()
x11()
pie(pais,labels=etiquetas,col=color)
rm(color,etiquetas,labels,nombresgrupos,pais,lebels)
rm(color,etiquetas,labels,nombresgrupos,pais,lebels)
#Instalar librerias
install.packages("ggplot2")
install.packages("ggplot2")
install(ggplot2)
library(ggplot2)
library(dplyr)
grupospaises <- paisesdatos_ImputM %>%
group_by(GRUPOS) %>%
count() %>%
ungroup() %>%
mutate(porcentaje = `n`/sum(`n`)*100)
grupospaises
ggplot(grupospaises, aes(x=Grupos de Paises, y=Porcentaje, fill=GRUPOS)) +
ggplot(grupospaises, aes(x=Grupos, y=Porcentaje, fill=GRUPOS)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label=paste0(round(porcentaje,1),"%")))+
theme_void()
ggplot(grupospaises, aes(x=GRUPOS, y=Porcentaje, fill=GRUPOS)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label=paste0(round(porcentaje,1),"%")))+
theme_void()
ggplot(grupospaises, aes(x=GRUPOS, y=porcentaje, fill=GRUPOS)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label=paste0(round(porcentaje,1),"%")))+
theme_void()
ggplot(grupospaises, aes(x=GRUPOS, y=porcentaje, fill=GRUPOS)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label=paste0(round(porcentaje,1),"%")), vjust= 1.5)+
theme_void()
x11()
pie(ggplot)
(x = round(mean(f2.A$Tasa.natalidad),1))
function()
(x = round(mean(f2.A$Tasa.natalidad),1))
f2.A<-paisesdatos_ImputM%>%filter(GRUPOS =="asia")
f2.Ana<-(f2.A$Tasa.natalidad = round(mean(f2.A$Tasa.natalidad),1))
f2.Am<-(f2.A$Tasa.mortalidad = round(mean(f2.A$Tasa.mortalidad),1))
f2.Ai<-(f2.A$Mortalidad.infantil = round(mean(f2.A$Mortalidad.infantil),1))
f2.Af<-paisesdatos_ImputM%>%filter(GRUPOS =="africa")
f2.Afna<-(f2.Af$Tasa.natalidad = round(mean(f2.Af$Tasa.natalidad),1))
f2.Afm<-(f2.Af$Tasa.mortalidad = round(mean(f2.Af$Tasa.mortalidad),1))
f2.Afi<-(f2.Af$Mortalidad.infantil = round(mean(f2.Af$Mortalidad.infantil),1))
f2.I<-paisesdatos_ImputM%>%filter(GRUPOS =="iberoamerica")
f2.Ina<-(f2.I$Tasa.natalidad = round(mean(f2.I$Tasa.natalidad),1))
f2.Im<-(f2.I$Tasa.mortalidad = round(mean(f2.I$Tasa.mortalidad),1))
f2.Ii<-(f2.I$Mortalidad.infantil = round(mean(f2.I$Mortalidad.infantil),1))
f2.E<-paisesdatos_ImputM%>%filter(GRUPOS =="EuropaOriental")
f2.Ena<-(f2.E$Tasa.natalidad = round(mean(f2.E$Tasa.natalidad),1))
f2.Em<-(f2.E$Tasa.mortalidad = round(mean(f2.E$Tasa.mortalidad),1))
f2.Ei<-(f2.E$Mortalidad.infantil = round(mean(f2.E$Mortalidad.infantil),1))
f2.Eo<-paisesdatos_ImputM%>%filter(GRUPOS =="EO-NA_JAPON_AUSTR_NZ")
f2.Eona<-(f2.Eo$Tasa.natalidad = round(mean(f2.Eo$Tasa.natalidad),1))
f2.Eom<-(f2.Eo$Tasa.mortalidad = round(mean(f2.Eo$Tasa.mortalidad),1))
f2.Eoi<-(f2.Eo$Mortalidad.infantil = round(mean(f2.Eo$Mortalidad.infantil),1))
f2.O<-paisesdatos_ImputM%>%filter(GRUPOS =="ORIENTE MEDIO")
f2.Ona<-(f2.O$Tasa.natalidad = round(mean(f2.O$Tasa.natalidad),1))
f2.Om<-(f2.O$Tasa.mortalidad = round(mean(f2.O$Tasa.mortalidad),1))
f2.Oi<-(f2.O$Mortalidad.infantil = round(mean(f2.O$Mortalidad.infantil),1))
detach(paisesdatos_ImputM)
M=rbind(f2.A,f2.Af,f2.E,f2.Eo,f2.I,f2.O)
tasas<-c(f2.Ana,f2.Am,f2.Ai,f2.Afna,f2.Afm,f2.Afi,f2.Ina,f2.Im,f2.Ii,f2.Ena,f2.Em,f2.Ei,f2.Eona,f2.Eom,f2.Eoi,
f2.Ona,f2.Om,f2.Oi)
grupos<-c(rep("asia",3),rep("africa",3),rep("iberoamerica",3),rep("EuropaOriental",3),rep("EO-NA_JAPON_AUSTR_NZ",3),rep("ORIENTE MEDIO",3))
tipo.tasas<-c(rep(c("Tasa.natalidad","Tasa.mortalidad","Mortalidad.infantil"),3))
m<-matrix(data=tasas,18,1)
m<-as.data.frame(m)
g<-matrix(data=tipo.tasas,18,1)
g<-as.data.frame(g)
r<-matrix(data = grupos,18,1)
r<-as.data.frame(r)
r<-merge(x=c(m,g,r),y="",all = T)
colnames(r)<-c("tasas","tipo tasas","GRUPOS")
x11()
p<-ggplot(data=r, mapping = aes(x=GRUPOS,y=tasas,fill=`tipo tasas`))
p + geom_bar(position = "dodge",stat="identity")
rm(f2.A,f2.Af,f2.O,f2.E,f2.Eo,f2.I,f2.Ana,f2.Am,f2.Ai,f2.Afna,f2.Afm,f2.Afi,f2.Ina,f2.Im,f2.Ii,f2.Ena,f2.Em,f2.Ei,f2.Eona,f2.Eom,f2.Eoi,
f2.Ona,f2.Om,f2.Oi,g,m,r,p,grupos,tasas,tipo.tasas)
function()
(x = round(mean(f2.A$Tasa.natalidad),1))
f2.A<-paisesdatos_ImputM%>%filter(GRUPOS =="asia")
f2.Ana<-(f2.A$Tasa.natalidad = round(mean(f2.A$Tasa.natalidad),1))
f2.Am<-(f2.A$Tasa.mortalidad = round(mean(f2.A$Tasa.mortalidad),1))
f2.Ai<-(f2.A$Mortalidad.infantil = round(mean(f2.A$Mortalidad.infantil),1))
f2.Af<-paisesdatos_ImputM%>%filter(GRUPOS =="africa")
f2.Afna<-(f2.Af$Tasa.natalidad = round(mean(f2.Af$Tasa.natalidad),1))
f2.Afm<-(f2.Af$Tasa.mortalidad = round(mean(f2.Af$Tasa.mortalidad),1))
f2.Afi<-(f2.Af$Mortalidad.infantil = round(mean(f2.Af$Mortalidad.infantil),1))
f2.I<-paisesdatos_ImputM%>%filter(GRUPOS =="iberoamerica")
f2.Ina<-(f2.I$Tasa.natalidad = round(mean(f2.I$Tasa.natalidad),1))
f2.Im<-(f2.I$Tasa.mortalidad = round(mean(f2.I$Tasa.mortalidad),1))
f2.Ii<-(f2.I$Mortalidad.infantil = round(mean(f2.I$Mortalidad.infantil),1))
f2.E<-paisesdatos_ImputM%>%filter(GRUPOS =="EuropaOriental")
f2.Ena<-(f2.E$Tasa.natalidad = round(mean(f2.E$Tasa.natalidad),1))
f2.Em<-(f2.E$Tasa.mortalidad = round(mean(f2.E$Tasa.mortalidad),1))
f2.Ei<-(f2.E$Mortalidad.infantil = round(mean(f2.E$Mortalidad.infantil),1))
f2.Eo<-paisesdatos_ImputM%>%filter(GRUPOS =="EO-NA_JAPON_AUSTR_NZ")
f2.Eona<-(f2.Eo$Tasa.natalidad = round(mean(f2.Eo$Tasa.natalidad),1))
f2.Eom<-(f2.Eo$Tasa.mortalidad = round(mean(f2.Eo$Tasa.mortalidad),1))
f2.Eoi<-(f2.Eo$Mortalidad.infantil = round(mean(f2.Eo$Mortalidad.infantil),1))
f2.O<-paisesdatos_ImputM%>%filter(GRUPOS =="ORIENTE MEDIO")
f2.Ona<-(f2.O$Tasa.natalidad = round(mean(f2.O$Tasa.natalidad),1))
f2.Om<-(f2.O$Tasa.mortalidad = round(mean(f2.O$Tasa.mortalidad),1))
f2.Oi<-(f2.O$Mortalidad.infantil = round(mean(f2.O$Mortalidad.infantil),1))
M=rbind(f2.A,f2.Af,f2.E,f2.Eo,f2.I,f2.O)
tasas<-c(f2.Ana,f2.Am,f2.Ai,f2.Afna,f2.Afm,f2.Afi,f2.Ina,f2.Im,f2.Ii,f2.Ena,f2.Em,f2.Ei,f2.Eona,f2.Eom,f2.Eoi,
f2.Ona,f2.Om,f2.Oi)
grupos<-c(rep("asia",3),rep("africa",3),rep("iberoamerica",3),rep("EuropaOriental",3),rep("EO-NA_JAPON_AUSTR_NZ",3),rep("ORIENTE MEDIO",3))
tipo.tasas<-c(rep(c("Tasa.natalidad","Tasa.mortalidad","Mortalidad.infantil"),3))
m<-matrix(data=tasas,18,1)
m<-as.data.frame(m)
g<-matrix(data=tipo.tasas,18,1)
g<-as.data.frame(g)
r<-matrix(data = grupos,18,1)
r<-as.data.frame(r)
r<-merge(x=c(m,g,r),y="",all = T)
colnames(r)<-c("tasas","tipo tasas","GRUPOS")
x11()
p<-ggplot(data=r, mapping = aes(x=GRUPOS,y=tasas,fill=`tipo tasas`))
p + geom_bar(position = "dodge",stat="identity")
rm(f2.A,f2.Af,f2.O,f2.E,f2.Eo,f2.I,f2.Ana,f2.Am,f2.Ai,f2.Afna,f2.Afm,f2.Afi,f2.Ina,f2.Im,f2.Ii,f2.Ena,f2.Em,f2.Ei,f2.Eona,f2.Eom,f2.Eoi,
f2.Ona,f2.Om,f2.Oi,g,m,r,p,grupos,tasas,tipo.tasas)
View(M)
# Tercer Punto
pnbpercapita <- mutate(paisesdatos_ImputM, pnper=paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.)
# Tercer Punto
library(dplyr)
pnbpercapita <- mutate(paisesdatos_ImputM, pnper=paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.)
pnbpercapita1<-cbind(pnbpercapita, paisesdatos_ImputM)
View(pnbpercapita)
rm(pnbpercapita, pnbpercapita1)
paisesdatos_ImputM <- round(mutate(paisesdatos_ImputM, pnper=paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.), 4)
pnbpercapita <- round(mutate(paisesdatos_ImputM, pnper=paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.), 4)
pnbpercapita <- round((paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.), 4)
paisesdatos_ImputM<-cbind(pnbpercapita, paisesdatos_ImputM)
paisesdatos_ImputM <- select(paisesdatos_ImputM, -pnbpercapita)
# Tercer Punto
paisesdatos_ImputM$PNBpercapita = round((paisesdatos_ImputM$PNB/paisesdatos_ImputM$Población..miles.),4)
rm(M)
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x = GRUPOS)) + geom_bar()
# Construccion del diagrama 3er punto
library(ggplot2)
ggplot(paisesdatos_ImputM, aes(x = GRUPOS)) + geom_bar()
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita)) + geom_bar(stat = identity)
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita)) + geom_bar(stat = "identity")
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita)) + geom_boxplot(stat = "identity")
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita)) + geom_boxplot(stat = "boxplot")
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita)) + geom_boxplot(stat = "boxplot") + theme_classic()
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) + geom_boxplot(stat = "boxplot") + theme_classic()
# Construccion del diagrama 3er punto
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) + geom_bar(stat = "identity") + theme_classic()
# Construccion del diagrama 3er punto
library(ggplot2)
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) + geom_bar(stat = "identity") + theme_classic()
attach(paisesdatos_ImputM)
quantile(paisesdatos_ImputM$PNBpercapita)
pnbperbajo <- quantile(paisesdatos_ImputM$PNBpercapita, .25)
pnbperbajo
pnbperbajo <- quantile(paisesdatos_ImputM$PNBpercapita < q1)
quantiles(paisesdatos_ImputM)
quantile(paisesdatos_ImputM)
quantile(paisesdatos_ImputM$PNBpercapita)
rm(pnbperbajo)
q1 <- quantile(paisesdatos_ImputM$PNBpercapita, 0.25)
q2 <- quantile(paisesdatos_ImputM$PNBpercapita, 0.50)
q3 <- quantile(paisesdatos_ImputM$PNBpercapita, 0.75)
bajo <- paisesdatos_ImputM$PNBpercapita < q1
bajo
bajo = TRUE
rm(bajo)
bajo <- paisesdatos_ImputM$PNBpercapita [paisesdatos_ImputM$PNBpercapita < q1]
medioBajo <- paisesdatos_ImputM$PNBpercapita [q1 <= paisesdatos_ImputM$PNBpercapita < q2]
medioBajo <- paisesdatos_ImputM$PNBpercapita [q1 <= paisesdatos_ImputM$PNBpercapita <= q2]
medioBajo <- paisesdatos_ImputM$PNBpercapita [q1<=paisesdatos_ImputM$PNBpercapita<q2]
medioBajo <- paisesdatos_ImputM$PNBpercapita [q1<=paisesdatos_ImputM$PNBpercapita && paisesdatos_ImputM$PNBpercapita < q2]
rm(medioBajo)
medioBajo <- paisesdatos_ImputM$PNBpercapita [q1<=paisesdatos_ImputM$PNBpercapita & paisesdatos_ImputM$PNBpercapita < q2]
medioAlto <- paisesdatos_ImputM$PNBpercapita [q2 <= paisesdatos_ImputM$PNBpercapita & paisesdatos_ImputM$PNBpercapita < q3]
alto <- paisesdatos_ImputM$PNBpercapita [paisesdatos_ImputM$PNBpercapita >= q3]
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = bajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
library(ggplot2) #ejecutar comando de librería
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = bajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = paisesdatos_ImputM$PNBpercapita[bajo], fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = bajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = q1, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = bajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = `bajo`, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = , fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = bajo , fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
bajo
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = round((bajo), 4), fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
color = c("blue", "orange", "purple", "red", "yellow")
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita*bajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita[bajo], fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = medioBajo, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = medioBajo)) +
geom_bar(stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = medioBajo)) +
geom_bar(posicion = "dodge", stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = medioBajo)) +
geom_bar(position = "dodge", stat = "identity") + theme_classic()
alto
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = alto)) +
geom_bar(position = "dodge", stat = "identity") + theme_classic()
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
attach(paisesdatos_ImputM)
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = alto)) +
geom_bar(position = "dodge", stat = "identity") + theme_classic()
barplot(alto)
barplot(bajo)
library(ggplot2) #ejecutar comando de librería
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_boxplot(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_boxplot(stat = "doge") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_boxplot(stat = "dodge") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = PNBpercapita, fill=GRUPOS)) +
geom_bar(stat = "identity") + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Tasa.natalidad, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Tasa.mortalidad, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Mortalidad.infantil, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
# Unión de los tres gráficos en uno solo
install.packages(quantmod)
# Unión de los tres gráficos en uno solo
install.packages(quantmod)
# Unión de los tres gráficos en uno solo
install.packages("quantmod")
# Unión de los tres gráficos en uno solo
install.packages("tseries")
library(tseries)
library(quantmod)
# Unión de los tres gráficos en uno solo
library(tseries)
library(fImport)
par(mfrow = c(1,3))
graficotasa <- ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Tasa.natalidad, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
rm(graficotasanat)
rm(graficotasa)
graficotasam <- ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Tasa.mortalidad, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
graficotasanat <- ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Tasa.natalidad, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
graficotasamf <- ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Mortalidad.infantil, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
rm(graficotasamf)
graficotasami <- ggplot(paisesdatos_ImputM, aes(x=GRUPOS,y = Mortalidad.infantil, fill=GRUPOS)) +
geom_boxplot() + theme_classic()
par(mfrow = c(1,3))
plot(graficotasanat, type = "l")
plot(graficotasam, type = "l")
plot(graficotasami, type = "l")
require(gridExtra)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 1)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 1)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 2)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 3)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 2)
F1 <- grid.arrange(graficotasanat, graficotasam, graficotasami, nrow = 2)
paisesdatos_ImputM$Tasa.mortalidad
h<-c(q1,q2,q3)
h<-matrix(h,3,1)
colnames(h)<-("Cuartiles")
rownames(h)<-c("Primer Cuartil","Segundo Cuartil","Tercer Cuartil")
alto
+ geom_bar(position = "dodge",stat="identity")+ coord_cartesian(ylim = c(1,100))
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, mapping = aes(x=Grupos,y=bajo)) + geom_bar(position = "dodge",stat="identity")+ coord_cartesian(ylim = c(1,100))
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, mapping = aes(x=GRUPOS,y=bajo)) + geom_bar(position = "dodge",stat="identity")+ coord_cartesian(ylim = c(1,100))
# Graficos clasificando con base al PNB per capita, a los paises en la columna Grupos
ggplot(paisesdatos_ImputM, mapping = aes(x=GRUPOS,y=q3)) + geom_bar(position = "dodge",stat="identity")+ coord_cartesian(ylim = c(1,100))
